.ts


// import { Component, inject } from '@angular/core';
// import { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';
// import { MatButtonModule } from '@angular/material/button';
// import { MatInputModule } from '@angular/material/input';
// import { AuthService } from '../../services/auth.service';
// import { Router } from '@angular/router';

// @Component({
//   selector: 'app-login',
//   standalone: true,
//   imports: [MatButtonModule, MatInputModule, ReactiveFormsModule],
//   templateUrl: './login.component.html',
//   styleUrl: './login.component.scss',
// })
// export class LoginComponent {
//   formbuilder = inject(FormBuilder);
//   authService = inject(AuthService);
//   router = inject(Router);

//   loginForm = this.formbuilder.group({
//     email: ['', [Validators.required]],
//     password: ['', [Validators.required]],
//   });

//   login() {
//     const { email, password } = this.loginForm.value;
//     this.authService.login(email!, password!).subscribe({
//       next: (result: any) => {
//         console.log(result);
//         localStorage.setItem('token', result.token);
//         localStorage.setItem('user', JSON.stringify(result.user));
//         this.router.navigateByUrl('/');
//       },
//       error: (err) => {
//         console.error(err);
//         if (err.status === 401 || err.error?.message === 'Invalid password') {
//           alert('Password is wrong');
//         } else {
//           alert('Login failed. Please try again.');
//         }
//       },
//     });
//   }
// }



import { Component, inject } from '@angular/core';
import { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';
import { MatButtonModule } from '@angular/material/button';
import { MatInputModule } from '@angular/material/input';
import { AuthService } from '../../services/auth.service';
import { Router } from '@angular/router';

@Component({
  selector: 'app-login',
  standalone: true,
  imports: [MatButtonModule, MatInputModule, ReactiveFormsModule],
  templateUrl: './login.component.html',
  styleUrl: './login.component.scss',
})
export class LoginComponent {
  formbuilder = inject(FormBuilder);
  authService = inject(AuthService);
  router = inject(Router);

  loginForm = this.formbuilder.group({
    email: ['', [Validators.required]],
    password: ['', [Validators.required]],
  });

  login() {
    const { email, password } = this.loginForm.value;

    this.authService.login(email!, password!).subscribe({
      next: (result: any) => {
        console.log(result);
        localStorage.setItem('token', result.token);
        localStorage.setItem('user', JSON.stringify(result.user));
        this.router.navigateByUrl('/');
      },
      error: (err) => {
        console.error(err);
        const message = err.error?.message || '';

        if (err.status === 401 || message.toLowerCase().includes('invalid password')) {
          alert('Password is wrong');
        } else if (err.status === 404 || message.toLowerCase().includes('user not found')) {
          alert('User not found. Please sign up.');
        } else {
          alert('Login failed. Please try again.');
        }
      },
    });
  }
}



.html


<div class="flex justify-center w-full mt-10">
  <div class="bg-white p-8 rounded shadow-md w-6/12 sm:w-96">
    <h2 class="text-2xl font-bold mb-4">Login</h2>
    <form [formGroup]="loginForm">
      <div class="mb-4">
        <mat-form-field class="w-full">
          <mat-label>Email</mat-label>
          <input
            type="text"
            formControlName="email"
            matInput
            placeholder="Your Email"
            required
          />
        </mat-form-field>
      </div>
      <div class="mb-6">
        <mat-form-field class="w-full">
          <mat-label>Password</mat-label>
          <input
            type="password"
            formControlName="password"
            matInput
            placeholder="Your Password"
            required
          />
        </mat-form-field>
      </div>
      <button
        mat-raised-button
        color="primary"
        (click)="login()"
        [disabled]="loginForm.invalid"
      >
        Login
      </button>
    </form>
  </div>
</div>
