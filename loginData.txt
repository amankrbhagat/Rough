.html



<div class="flex justify-center w-full mt-10">
  <div class="bg-white p-8 rounded shadow-md w-6/12 sm:w-96">
    <h2 class="text-2xl font-bold mb-4">Login</h2>
    <form [formGroup]="loginForm">
      <!-- Email Field -->
      <div class="mb-4">
        <mat-form-field class="w-full">
          <mat-label>Email</mat-label>
          <input
            type="text"
            formControlName="email"
            matInput
            placeholder="Your Email"
            required
          />
        </mat-form-field>
        @if (email && email.invalid && (email.dirty || email.touched)) {
          <div class="text-red-500 text-sm">
            @if (email.errors?.['required']) {
              <div>Email is required.</div>
            }
            @if (email.errors?.['email']) {
              <div>Enter a valid email address.</div>
            }
          </div>
        }
      </div>

      <!-- Password Field -->
      <div class="mb-6">
        <mat-form-field class="w-full">
          <mat-label>Password</mat-label>
          <input
            type="password"
            formControlName="password"
            matInput
            placeholder="Your Password"
            required
          />
        </mat-form-field>
        @if (password && password.invalid && (password.dirty || password.touched)) {
          <div class="text-red-500 text-sm">
            @if (password.errors?.['required']) {
              <div>Password is required.</div>
            }
            @if (password.errors?.['pattern']) {
              <div>
                Must be 6+ chars, include 1 capital, 1 number, 1 special character.
              </div>
            }
          </div>
        }
      </div>

      <div class="flex justify-between items-center mb-4">
        <button
          mat-raised-button
          color="primary"
          (click)="login()"
          [disabled]="loginForm.invalid"
        >
          Login
        </button>
        <button
          mat-button
          color="accent"
          type="button"
          (click)="forgotPassword()"
        >
          Forgot Password?
        </button>
      </div>
    </form>
  </div>
</div>



.ts


import { Component, inject } from '@angular/core';
import {
  FormBuilder,
  ReactiveFormsModule,
  Validators,
} from '@angular/forms';
import { Router } from '@angular/router';
import { CommonModule } from '@angular/common';
import { MatInputModule } from '@angular/material/input';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatButtonModule } from '@angular/material/button';
import { AuthService } from '../../services/auth.service';

@Component({
  selector: 'app-login',
  standalone: true,
  imports: [
    CommonModule,
    ReactiveFormsModule,
    MatInputModule,
    MatFormFieldModule,
    MatButtonModule,
  ],
  templateUrl: './login.component.html',
  styleUrl: './login.component.scss',
})
export class LoginComponent {
  formBuilder = inject(FormBuilder);
  authService = inject(AuthService);
  router = inject(Router);

  loginForm = this.formBuilder.group({
    email: ['', [Validators.required, Validators.email]],
    password: [
      '',
      [
        Validators.required,
        Validators.pattern(
          /^(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*()_+{}\[\]:;<>,.?~\\/-]).{6,}$/
        ),
      ],
    ],
  });

  get email() {
    return this.loginForm.get('email');
  }

  get password() {
    return this.loginForm.get('password');
  }

  login() {
    if (this.loginForm.invalid) {
      alert('All fields must be valid and filled out.');
      return;
    }

    const { email, password } = this.loginForm.value;

    this.authService.login(email!, password!).subscribe((result: any) => {
      localStorage.setItem('token', result.token);
      localStorage.setItem('user', JSON.stringify(result.user));
      this.router.navigateByUrl('/');
    });
  }

  forgotPassword() {
    alert('Redirecting to forgot password page...');
    this.router.navigateByUrl('/forgot-password');
  }
}
